{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API = {\n  PIXABAY: {\n    PATH: 'https://pixabay.com/api/',\n    KEY: '44444020-42ceddb875011e5970bd122af',\n  },\n};\n\nexport const fetchImages = async (searchQuery, page) => {\n\n  const params = new URLSearchParams({\n    key: API.PIXABAY.KEY,\n    q: searchQuery,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(API.PIXABAY.PATH + '?' + params.toString());\n};","export const renderTemplate = (data) => {\n  console.log(data);\n  return `\n    <a href=\"${data.largeImageURL}\" class=\"item\">\n      <img src=\"${data.webformatURL}\" alt=\"\" alt=\"${data.tags}\"/>\n      <div class=\"data\">\n        <p><b>Likes</b> <span>${data.likes}</span></p>\n        <p><b>Views</b> <span>${data.views}</span></p>\n        <p><b>Comments</b> <span>${data.comments}</span></p>\n        <p><b>Downloads</b> <span>${data.downloads}</span></p>\n      </div>\n    </a>\n  `;\n};","import { fetchImages } from './js/pixabay-api.js';\nimport { renderTemplate } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst formEl = document.querySelector('form.form-search');\nconst galleryEl = document.querySelector('.gallery');\n\nconst lightbox = new SimpleLightbox('.gallery a', {});\n\nformEl.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const inputValue = formEl.elements.search.value;\n\n  if (!inputValue) {\n    iziToast.error({\n      message: 'Please enter a search term',\n      position: 'topRight',\n      class: 'error',\n      color: 'red',\n    });\n  } else {\n    galleryEl.innerHTML = '';\n    galleryEl.classList.add('is-load');\n\n    fetchImages(inputValue)\n      .catch((error) => { console.log(error); })\n      .then((response) => response.json())\n      .then((data) => {\n        galleryEl.classList.remove('is-load');\n        const imagesHtml = [];\n\n        if (data.total === 0) {\n          iziToast.error({\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n            class: 'error',\n            color: 'red',\n          });\n        } else {\n          data.hits.forEach((image) => {\n            imagesHtml.push(renderTemplate(image));\n          });\n\n          galleryEl.innerHTML = imagesHtml.join('');\n          lightbox.refresh();\n        }\n      });\n\n    formEl.reset();\n  }\n});\n"],"names":["API","fetchImages","searchQuery","page","params","renderTemplate","data","formEl","galleryEl","lightbox","SimpleLightbox","event","inputValue","error","response","imagesHtml","iziToast","image"],"mappings":"6vBAAA,MAAMA,EAAM,CACV,QAAS,CACP,KAAM,2BACN,IAAK,oCACN,CACH,EAEaC,EAAc,MAAOC,EAAaC,IAAS,CAEtD,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKJ,EAAI,QAAQ,IACjB,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAMF,EAAI,QAAQ,KAAO,IAAMI,EAAO,SAAQ,CAAE,CACzD,EClBaC,EAAkBC,IAC7B,QAAQ,IAAIA,CAAI,EACT;AAAA,eACMA,EAAK,aAAa;AAAA,kBACfA,EAAK,YAAY,iBAAiBA,EAAK,IAAI;AAAA;AAAA,gCAE7BA,EAAK,KAAK;AAAA,gCACVA,EAAK,KAAK;AAAA,mCACPA,EAAK,QAAQ;AAAA,oCACZA,EAAK,SAAS;AAAA;AAAA;AAAA,KCF5CC,EAAS,SAAS,cAAc,kBAAkB,EAClDC,EAAY,SAAS,cAAc,UAAU,EAE7CC,EAAW,IAAIC,EAAe,aAAc,CAAE,CAAA,EAEpDH,EAAO,iBAAiB,SAAWI,GAAU,CAC3CA,EAAM,eAAc,EAEpB,MAAMC,EAAaL,EAAO,SAAS,OAAO,MAErCK,GAQHJ,EAAU,UAAY,GACtBA,EAAU,UAAU,IAAI,SAAS,EAEjCP,EAAYW,CAAU,EACnB,MAAOC,GAAU,CAAE,QAAQ,IAAIA,CAAK,EAAI,EACxC,KAAMC,GAAaA,EAAS,KAAI,CAAE,EAClC,KAAMR,GAAS,CACdE,EAAU,UAAU,OAAO,SAAS,EACpC,MAAMO,EAAa,CAAA,EAEfT,EAAK,QAAU,EACjBU,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,WACV,MAAO,QACP,MAAO,KACnB,CAAW,GAEDV,EAAK,KAAK,QAASW,GAAU,CAC3BF,EAAW,KAAKV,EAAeY,CAAK,CAAC,CACjD,CAAW,EAEDT,EAAU,UAAYO,EAAW,KAAK,EAAE,EACxCN,EAAS,QAAO,EAE1B,CAAO,EAEHF,EAAO,MAAK,GAlCZS,EAAS,MAAM,CACb,QAAS,6BACT,SAAU,WACV,MAAO,QACP,MAAO,KACb,CAAK,CA+BL,CAAC"}